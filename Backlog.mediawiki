= Pete's backlog or "Why is feature X not being worked on?" =

== Background ==
Being involved in multiple Open Source projects at once makes for an interesting scheduling challenge.

Every so often (usually more than I'd like to have to answer), I get asked about the state of feature X with regards to one of these projects, and when I think it will be available. Because of this, I have decide to create a page that I can simply point to to try to answer that question.

The first thing you should understand, and this is unfortunately true for most Open Source developers, is that, as much as we would like to spend our full day coding and adding features for our projects, most of us also hold a 9 to 5 job in companies that usually have little interest in fostering their employee's Open Source activities. This is currently my case, and to give you an idea, the company I work for actively prohibits access to sites like SourceForge.net on their network for instance.

As far as '''you''' are concerned, what this means is that, for the best part of the day, I do not have the possibility to engage in anything Open Source related and as a result the time I can can spend working on the features highlighted below is a lot more limited than you think.

What I am also trying to illustrate from this page is that I have my fingers in more than one pie. As such, even the time I manage to scrape together may not go to the feature you are interested in, due to another project or feature taking precedence.

So please find below, more or less in order of importance, the current state of my backlog. You will also see that I provide estimates of the time I think adding the feature will take. Note however that this is a best case scenario '''provided I could devote all my free time on it''', which is unlikely. More realistically then, you want to at least double these times, as well as remember that these estimates are by no means the promise of an ETA.

And so, without further ado...

== Pete's current backlog ==

=== Legend ===
[[images/x.png]]: [http://libusbx.org libusbx]<br/>
[[images/r.png]]: [http://rufus.akeo.ie rufus]<br/>
[[images/w.png]]: [http://libwdi.akeo.ie libwdi]<br/>
[[images/c.png]]: [http://cecd.akeo.ie libcec/cecd]<br/>
[[images/u.png]]: [http://ubrx.akeo.ie UBRX]<br/>
[[images/b.png]]: [http://peteakeo.ie blog] and miscellanea<br/>
For the record, if anything happens there [http://libusbx.org libusbx] '''always''' take precedence. The reason is that the project is quite new and is a fork in direct competition with a well established one, and so requires every bit of commitment it can get.</br/>
Oh, and as you will find, those are all 'high priority' because I would really like to complete them all equally, and my only issue here is time.

=== High priority ===
[[images/x.png]]: Well, that bMaxPower switch didn't go donw to well, did it? (Est. 1 day)<br/>
[[images/x.png]]: Create a Wiki page for proposed API changes (Est. 1 day)<br/>
[[images/x.png]]: initial libusbx 2.0 token release (Est. 1 week)<br/>
[[images/x.png]]: Create a Wiki page for obtaining troubleshooting help (Est. 2 days)<br/>
[[images/x.png]]: Create a Wiki page for software to test for releases (Est. 1 day)<br/>
[[images/x.png]]: Add <code>libusb_strerror()</code> with localization (Est. 3 days)<br/>
[[images/x.png]]: Produce a 1.1.0 fasttrack release (Est. 2 days)<br/>
[[images/r.png]]: Add support for > 64 GB drives and release Rufus 1.2.1 (Est. 2 weeks)<br/>
[[images/x.png]]: Add WinCE backend to libusbx (Est. 2 weeks)<br/>
[[images/x.png]]: Add FX2 EEPROM upload and FX3 support to libusbx' <code>fxload</code> sample (Est. 2 weeks)<br/>
[[images/x.png]]: Fix <code>libusb-win32</code> filter driver support for composite device members (Est. 1 week)<br/>
[[images/x.png]]: Add reset+isochronous support for <code>libusb-win32</code> and <code>libusbK</code> (Est. 3 weeks)<br/>
[[images/w.png]]: Create a <code>signtool</code> equivalent based on <code>pki.c</code> for the MinGW-w64 guys (Est. 6-8 weeks)<br/>
[[images/x.png]]: Update the old <code>-pbatard</code> hotplug branch for libusbx (Est. 1 week)

=== High priority, if only I had more time ===
[[images/r.png]]: Add localization to Rufus (Est. 2 weeks)<br/>
[[images/w.png]]: Rework embedding and add <code>7z</code> support to <code>libwdi</code> (Est. 5 weeks)<br/>
[[images/b.png]]: Create a guide for Gerrit+Jenkins installation (Est. 1-2 weeks)<br/>
[[images/x.png]]: Setup Gerrit+Jenkins for libusbx (Est. 2 weeks)<br/>
[[images/x.png]]: Use the github API for e-mail notifications on new issues (Est. 2 weeks)<br/>
[[images/x.png]]: libusbx hotplug event API (Est. 6 weeks)<br/>
[[images/r.png]]: Folder selection support (Est. 2 weeks)<br/>
[[images/r.png]]: Optical Disc support (Est. 2 weeks)<br/>
[[images/r.png]]: GPT/UEFI support (Est. 4 weeks)<br/>

=== High priority, if I could develop Open Source all day long ===
[[images/r.png]]: Commandline support (Est. 3 weeks)<br/>
[[images/w.png]]: Download vs embedding (Est. 3 weeks)<br/>
[[images/w.png]]: Generic driver support (not USB only) (Est. 2 months)<br/>
[[images/x.png]]: HID support for OS-X (Est. 4 weeks)<br/>
[[images/u.png]]: Finalize how to produce bare-metal code compatible with UBRX (Est. 3 weeks)<br/>
[[images/u.png]]: Add USB 3.0 serial debug (Est. 6 weeks)<br/>
[[images/c.png]]: Complete CECD using a virtual HDMI/CEC device (Est. 6 weeks)<br/>
[[images/r.png]]: VMDK/VHD support (Est. 6 weeks)<br/>
[[images/r.png]]: Run Windows from USB (Est. 4 weeks)<br/>
[[images/r.png]]: Check for new versions (Est. 2 weeks)<br/>

=== What I know I'll never have time to spend on ===
[[images/r.png]]: Multiboot/grub4dos (If you need this, you should know enough not to require an automated tool to do that for you!)<br/>


